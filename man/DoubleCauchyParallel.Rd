% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DoubleCauchyParallel.R
\name{DoubleCauchyParallel}
\alias{DoubleCauchyParallel}
\title{A stable and adaptive polygenic signal detection based on repeated sample splitting.}
\usage{
DoubleCauchyParallel(
  n1,
  m,
  Y,
  G,
  varselec.method = c("DCSIS", "ElasticNet", "SIS"),
  J2 = NULL,
  alpha = NULL,
  cor.est = c("pdsoft", "pdsoft.cv"),
  lam,
  pow.param = c(0:10),
  seed = NULL,
  family = c("gaussian", "binomial"),
  ncores = 1
)
}
\arguments{
\item{n1}{number of individuals for training.}

\item{m}{number of sample splitting.}

\item{Y}{The outcome variable of interest; a numeric vector of length n.}

\item{G}{a numeric n by J genotype matrix.}

\item{varselec.method}{variable selection methods for training sample.}

\item{J2}{number of variables selected based on training sample. Only needed when \code{DCSIS} and \code{SIS} is selected.}

\item{alpha}{The elasticnet mixing parameter, with \eqn{0 \le \alpha \le 1}.
\code{alpha=1} is the lasso penalty, and \code{alpha=0} the ridge penalty. Only needed when \code{ElasticNet} is selected.}

\item{cor.est}{The method for estimating a positive definite correlation matrix.}

\item{lam}{The tuning parameter for estimating correlation matrix; Could be either a scalar or
a p by p symmetric matrix with an irrelevant diagonal while \code{pdsoft} is selected;
Should be a vector when \code{pdsoft.cv} is selected.
See \code{pdsoft} and \code{pdsoft.cv} in \code{PDSCE} for details.}

\item{pow.param}{an integer numeric vector specifying the \eqn{\gamma} values used in the test statistics.}

\item{seed}{seeds for sample splitting, should be a scalar.}

\item{family}{Specify response type. Only needed when \code{SIS} is selected and only "gaussian" and "binomial" are available.}

\item{ncores}{Number of cores to be used in parallel computing (default=1).}
}
\value{
A vector of p values.
}
\description{
This function is a parallel version of DoubleCauchy function, which can parallel the sample splitting times to improve computational efficiency.
}
\examples{
 J = 100
 n = 50
 beta=c(rep(2,3),rep(0,J-3))
 data=example_data_generate(n, J, beta)
 Y=data$Y
 G=data$G
 lam=0.1
 weights=c(J:1)
 pow.param=c(1:5)
 n1=20
 m=10
 DoubleCauchy(n1, m, Y, G, varselec.method="DCSIS", J2=10,
 cor.est="pdsoft", lam=lam, pow.param=pow.param)


}
\references{
Zhao and Sun (2020). A stable and adaptive polygenic signal detection method based on repeated sample splitting.
   \emph{arXiv:2008.02442}.
}
\keyword{Cauchy}
\keyword{Double}
\keyword{Parallel,}
\keyword{Sample}
\keyword{Stable}
\keyword{adaptive}
\keyword{and}
\keyword{splitting,}
\keyword{test,}
